function [corrEvent_left, corrEvent_right] = SATcorrect_trials(EEG)
% function [corrEvent_left, corrEvent_right] = SATcorrect_trials(EEG)
%
% This function is used to calculate PSD using welch method 
% The function loads '.set' epoched EEG file for the respective SSVEP event 
% ad calculates the PSD for each trial. 
% 
% Inputs:
%   EEG (struct)       : EEGLab EEG epoched data 
%   window_lengh (int) : length of the window for pwelch
%
% Ouput:
%   ChanPSD (2D array) : PSD values averaged across trial for each channel (PSD values x channel)
%   f (1D array)       : frequency vector
%
% Example function call:
% [ChanPSD, f] = calc_psd(EEG, window_length)


% counter for trial
trialCount = 0;
% cell to store correct left events
corrEvent_left = {};
% cell to store correct right events
corrEvent_right = {};

% loop over events 
for idx = 1:numel(EEG.event)
    % check for response events 
    if strcmp(EEG.event(idx).type, 'response')
        % incrementing trial count 
        trialCount = trialCount + 1;
        
        % determining correct left trials
        % checking left trials
        if startsWith(EEG.event(idx-1).type, 'left')
            % checking for ascending trials
            if contains(EEG.event(idx-1).type, 'asc')
                % check if correct response
                if strcmp(EEG.event(idx+1).type, '1')
                    corrEvent_left = [corrEvent_left, EEG.event(idx-1).type];
                end 
            % checking for alternating trials
            elseif contains(EEG.event(idx-1).type, 'alt')
                % check if correct response
                if strcmp(EEG.event(idx+1).type, '2')
                    corrEvent_left = [corrEvent_left, EEG.event(idx-1).type];
                end 
            % checking for descending trials
            elseif contains(EEG.event(idx-1).type, 'dec')
                % check if correct response
                if strcmp(EEG.event(idx+1).type, '3')
                    corrEvent_left = [corrEvent_left, EEG.event(idx-1).type];
                end 
            end
            
        % determining correct right trials
        % checking right trials
        elseif startsWith(EEG.event(idx-1).type, 'right')
            % checking for ascending trials
            if contains(EEG.event(idx-1).type, 'asc')
                % check if correct response
                if strcmp(EEG.event(idx+1).type, '1')
                    corrEvent_right = [corrEvent_right, EEG.event(idx-1).type];
                end 
            % checking for alternating trials
            elseif contains(EEG.event(idx-1).type, 'alt')
                % check if correct response
                if strcmp(EEG.event(idx+1).type, '2')
                    corrEvent_right = [corrEvent_right, EEG.event(idx-1).type];
                end 
            % checking for descending trials
            elseif contains(EEG.event(idx-1).type, 'dec')
                % check if correct response
                if strcmp(EEG.event(idx+1).type, '3')
                    corrEvent_right = [corrEvent_right, EEG.event(idx-1).type];
                end 
            end  
        end 
    end 
end 





